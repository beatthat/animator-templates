{
    "name": "animator-templates",
    "version": "0.0.1",
    "description": "Unity editor tools for defining AnimatorController templates which can be easily copied and assigned via editor scripts. This is useful if you want to have an editor option to 'Create a MyComponent' where new instances of MyComponent depend on having an animator whose controller has a particular set up, e.g must has this set of params and layer[s] that handle those params in a default way. An important point is these tools make it easy for such a component to get its own copy of the (template) AnimatorController, so you can then customize.",
    "main": "index.js",
    "config": {
      "scope": "ape"
    },
    "repository": {
        "type": "git",
        "url": "git+https://github.com/your-scope/your-pkg-name.git"
    },
    "files": [
        "index.js",
        "scripts",
        "src"
    ],
    "author": "larrykirschner@gmail.com",
    "license": "MIT",
    "bugs": {
        "url": "https://github.com/your-scope/your-pkg-name/issues"
    },
    "homepage": "https://github.com/your-scope/your-pkg-name",
    "scripts": {
        "postinstall": "node scripts/postinstall.js",
        "preinstall:test": "rm -f *.tgz",
        "install:test": "npm pack && cp ${npm_package_name}-${npm_package_version}.tgz ${npm_package_name}-latest.tgz && cd test && npm run clean && npm install",
        "clean": "rm -f *.tgz package-lock.json && cd test && npm run clean",
        "template:update": "node scripts/template-update.js",
        "cp:test2src": "cd test && node scripts/cp-test2src.js",
        "overwrite:test2src": "cd test && node scripts/overwrite-test2src.js",
        "version": "git add -A",
        "postversion": "git push && git push --tags && npm run clean"
    },
    "dependencies": {
        "path": "^0.12.7",
        "unity-npm-utils": "github:beatthat/unity-npm-utils#semver:^1.0.0"
    }
}
